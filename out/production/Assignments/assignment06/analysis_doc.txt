When you are satisfied that your program is correct, write a brief analysis
document. The analysis document is 10% of your Assignment 7 grade. Ensure that
your analysis document addresses the following.

1. Explain the hashing function you used for BadHashFunctor. Be sure to discuss
why you expected it to perform badly (i.e., result in many collisions).
The way I create the badHashFunctor, I choose the first character of the string and times the length of that string.
So the same length and same first character will have collisions. Thus, more collisions than others.

2. Explain the hashing function you used for MediocreHashFunctor. Be sure to
discuss why you expected it to perform moderately (i.e., result in some
collisions).
Mediocre functor loop through a string and keep plus that ascii value to the output string.
I expect it to be moderate bc it takes 27^8 possible keys. The keys are strings of 8 ASCII letters and spaces which are in the
range of 65 - 95. Hence, the sums of 8 char values will be in the range of 520 - 760.

3. Explain the hashing function you used for GoodHashFunctor. Be sure to
discuss why you expected it to perform well (i.e., result in few or no
collisions).
The hash number will be different after everytime it calculate and plus the string of character to that hash number.
Hence, the possibility of collisions are less.

4. Design and conduct an experiment to assess the quality and efficiency of
each of your three hash functions. Briefly explain the design of your
experiment.  Plot the results of your experiment. Since the organization of
your plot(s) is not specified here, the labels and titles of your plot(s), as
well as, your interpretation of the plots is important. A recommendation for
this experiment is to create two plots: one that shows the number of collisions
incurred by each hash function for a variety of hash table sizes, and one that
shows the actual running time required by various operations using each hash
function for a variety of hash table sizes.

5. What is the cost of each of your three hash functions (in Big-O notation)?
Note that the problem size (N) for your hash functions is the length of the
String, and has nothing to do with the hash table itself. Did each of your hash
functions perform as you expected (i.e., do they result in the expected number
of collisions)?

Upload your solution (.pdf only) through Canvas.

